name: Build and Deploy Production Calculator

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    if: false # Remove this line when there is a Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_USERNAME }}/production-calculator

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: true
          sbom: true

  deploy:
    runs-on: ubuntu-latest
    # needs: build  # Uncomment this line when Dockerfile is added

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install SSH client and cloudflared
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client ca-certificates
          curl -L -o cloudflared.deb "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb"
          sudo dpkg -i cloudflared.deb || sudo apt-get -f install -y

      - name: Add SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

      - name: Run remote deploy commands via cloudflared ProxyCommand
        env:
          CF_HOSTNAME: ${{ secrets.SERVER_SSH_HOST }}
        run: |
          ssh -i ~/.ssh/deploy_key \
            -o ProxyCommand="cloudflared access ssh --hostname $CF_HOSTNAME" \
            -o StrictHostKeyChecking=no \
            -p "${{ secrets.SERVER_SSH_PORT }}" \
            "${{ secrets.SERVER_SSH_USERNAME }}"@"${{ secrets.SERVER_SSH_HOST }}" <<'EOF'
            cd Production-Calculator
            git pull origin main
            docker compose down
            docker compose up -d
